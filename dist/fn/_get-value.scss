/// Returns a property value from currently active item. Can be used inside a [**import**](#mixin-import) mixin wihout **$name** and **$group** parameters. If the requested property doesn't require any further calculations, use [**get**](#function-get) function instead. This function is identical to [**get**](#function-get) function, wihout the automatic unit conversion.
/// @group export
/// @access public
/// @param {string} $prop - Property name
/// @param {string} $name [false] - Name
/// @param {string} $group [$export-group] - Group identifier
/// @param {map} $data [$system-import] - Source map
/// @example element { height: rem(get-value(height) / 2); }

@function get-value($prop, $name: false, $group: $export-group, $data: $system-import) {

  // name and group is provided
  @if(type-of($name) == 'string' and type-of($group) == 'string') {
    $data: import($name, $group);
  }

  // not found
  @if(map-has-key($data, $prop) == false) {
    @error err('key-not-found', $prop, '(get-value)', map-keys($data));
  }

  // value
  $value: map-get($data, $prop);

  // unit protection, can be anything except em and rem
  @if(type-of($value) == number) {
    @if(unit($value) == em or unit($value) == rem) {
      @error 'Cannot be relative unit.';
    }
  }

  // return
  @return $value;

}
