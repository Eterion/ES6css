/// Returns pixel value of media scale according to **$scale** key. Use of [**media-between**](#mixin-media-between), [**media-only**](#mixin-media-only), [**media-up-from**](#mixin-media-up-from) and [**media-up-to**](#mixin-media-up-to) mixins is highly recommended instead of creating new media rules through this function. Media breakpoints are completely customizable through **$const-media-scale** constant.
/// @group media
/// @access public
/// @param {number|string} $scale - Scale or number
/// @param {string} $prop [width] - Determines what value is returned, can be **width**, **height** or **both**
/// @example media(desktop) // returns 1680px

@function media($scale, $prop: width) {

  // scale
  @if(type-of($scale) == 'string') {

    // not found
    @if(map-has-key($const-media-scale, $scale) == false) {
      @error err('key-not-found', $scale, '(media)', map-keys($const-media-scale));
    }

    // both
    @if($prop == both) {
      $scale: map-get($const-media-scale, $scale);
    }

    // width, height
    @else {
      $scale: map-deep-get($const-media-scale, $scale, $prop);
    }

  }

  // return
  @return $scale;

}
