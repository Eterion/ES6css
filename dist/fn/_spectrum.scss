/// Returns color **value** according to its position in **chars** list, where
/// the **chars** list represents the entire color spectrum. The **chars**
/// property accepts custom list of characters, `alpha` (alphabet a-z) or `num`
/// (numbers 0-9) presets. If the searched **value** is a list of values, the
/// resulting colors will be mixed together to produce a single color.
/// @access public
/// @param {number|string|list} $value - Searched value in character list
/// @param {string|list} $chars [alpha] - Source characters (alpha, num)
/// @param {number} $saturation [100] - Saturation (0-100)
/// @param {number} $lightness [50] - Lightness (0-100)

@function spectrum($value, $chars: 'alpha', $saturation: 100, $lightness: 50) {
  // Alphabet
  @if ($chars == 'alpha') {
    $chars: a b c d e f g h i j k l m n o p q r s t u v w x y z;
  }

  // Numbers
  @if ($chars == 'num') {
    $chars: 0 1 2 3 4 5 6 7 8 9;
  }

  // Color
  $color: hsl(
    (360 / (length($chars) - 1)) *
      (index($chars, if(type-of($value) == list, nth($value, 1), $value)) - 1),
    $saturation * 1%,
    $lightness * 1%
  );

  // Mix
  @if (type-of($value) == list) {
    @for $n from 2 through length($value) {
      $color: mix(
        $color,
        hsl(
          (360 / (length($chars) - 1)) * (index($chars, nth($value, $n)) - 1),
          $saturation * 1%,
          $lightness * 1%
        )
      );
    }
  }

  @return $color;
}
