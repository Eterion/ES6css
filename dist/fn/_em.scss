/// Returns a **$number** recalculated to em units. This function and its [**rem**](#function-rem) counterpart should be used on every pixel value, to allow scaling based on root font size. To ensure visibility of all elements, numbers equal or below **$const-relative-units-min** are not recalculated.
/// @access public
/// @param {number} $number - Input number
/// @example em(12px) // returns 1em

@function em($number) {

  @if($const-relative-units-enabled) {
    @if(type-of($number) == 'number') {
      @if(unit($number) == 'px' or unitless($number)) {

        // is equal or below minimum
        @if(abs(clear-unit($number)) > 0 and abs(clear-unit($number)) <= clear-unit($const-relative-units-min)) {
          @return $number;
        }

        // recalculate to em
        @return #{clear-unit($number) / clear-unit(map-get($const-font-size-scale, $const-font-size))}em;

      }
    }
  }

  // return
  @return $number;

}
