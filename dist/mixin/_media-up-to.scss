/// Wraps the content with a specified media query from provided **$scale** in downward direction. Use of [**media-up-from**](#mixin-media-up-from) mixin is highly preferred before any other media mixin (not a requirement). The **$operator** parameter determines relationship between width and height properties, only relevant when **$prop** is set to **both**. Media breakpoints are completely customizable through **$const-media-scale** constant.
/// @group media
/// @access public
/// @param {number|string} $scale - Scale or number
/// @param {string} $prop [width] - Determines what value is returned, can be **width**, **height** or **both**
/// @param {string} $operator [and] - Determines relationship between width and height, can be **and** or **or**
/// @param {string} $direction [$const-mq-direction] - Determines the direction for media query, can be **up** or **down**
/// @example @include media-up-to(phone) { ... }

@mixin media-up-to(
  $scale,
  $prop: width,
  $operator: and,
  $direction: $const-mq-direction
) {
  // not found
  @if (type-of($scale) == 'string') {
    @if (map-has-key($const-media-scale, $scale) == false) {
      @error err('key-not-found', $scale, '(media-up-to)', map-keys($const-media-scale));
    }
  }
  // definition
  @media #{media-query(max, $scale, $prop, $operator, $direction)} {
    @content;
  }
}
