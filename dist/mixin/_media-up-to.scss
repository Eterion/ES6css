/// Wraps the content with a specified media query from provided **$scale** in downward direction. Use of [**media-up-from**](#mixin-media-up-from) mixin is highly preferred before any other media mixin (not a requirement).
/// @group media
/// @access public
/// @param {number|string} $scale - Scale.
/// @param {string} $prop [width] - Determines what value is returned, can be **width**, **height** or **both**.
/// @param {string} $operator [and] - Media query operator, can be **and** or **or**.
/// @example @include media-up-to(phone) { ... }

@mixin media-up-to($scale, $prop: width, $operator: and) {

  // not found
  @if(type-of($scale) == 'string' and map-has-key($const-media-scale, $scale) == false) {
    @error err('key-not-found', $scale, '(media-up-to)', map-keys($const-media-scale));
  }

  // definition
  @media #{media-query(max, $scale, $prop, $operator)} {
    @content;
  }

}
