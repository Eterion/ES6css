// Private mixins are intentionally left out of documentation.
// Adds position to items inside grid container, needed only for legacy support.
// @access private
// @param {number} $width - Column width, in pixels
// @param {number} $whitespace - Space between columns, in pixels
// @param {number} $index - Index of item inside container
// @param {number} $trim-viewport-by [0] - Reduce available width considered into legacy calculation
// @param {number} $count [1] - Internal variable

@mixin grid-item($width, $whitespace, $index, $trim-viewport-by: 0, $count: 1) {
  @if(type-of($count) == 'number') {
    &:nth-child(#{$index}) {

      // sass-lint:disable-block no-vendor-prefixes
      // microsoft prefixes are needed because of the legacy syntax
      // -----

      // calculate item position in grid
      $count-restricted: if($count <= $const-grid-column-min, $const-grid-column-min, $count);
      -ms-grid-column: $index - ((ceil($index / $count-restricted) - 1) * $count-restricted);
      -ms-grid-row: ceil($index / $count-restricted);

      // media
      // number of columns is different based on available width
      // recalculates item position in grid in media query

      @for $column-index from ($const-grid-column-min + 1) through $const-grid-column-max {
        @include media-up-from($column-index * ($width + $whitespace)) {

          // calculate number of columns
          $available: media($column-index * ($width + $whitespace)) - $trim-viewport-by;
          $add: if($available > ($width + $whitespace), floor($available / ($width + $whitespace)), 0);
          $count-restricted: if(($count + $add) <= $const-grid-column-min, $const-grid-column-min, ($count + $add));

          // legacy
          -ms-grid-column: $index - ((ceil($index / $count-restricted) - 1) * $count-restricted);
          -ms-grid-row: ceil($index / $count-restricted);

        }
      }

    }
  }
}
