/// Extracts an item, previously defined via [**export**](#mixin-export) mixin, and allows the use of [**get**](#function-get) and [**get-value**](#function-get-value) functions without the need of specified group. This mixin is internally used by [**import**](#mixin-import) mixin.
/// @group export
/// @access public
/// @param {string} $name - Name
/// @param {string} $group [$export-group] - Group identifier
/// @example @include props(component-name) { ... }

@mixin props($name, $group: if(global-variable-exists(export-group), $export-group, $system-default-group)) {

  // group
  // set group name to provided export group
  // needed in case when the $export-group variable is not used

  $export-group: $group !global;

  // import (data)
  // allows the use of nested import mixins
  // class is generated for each mixin as well

  $system-data: map-merge($system-data, (
    '#{compute-key($name, $group)}': import($name, $group),
  )) !global;

  // import
  // global variable used for storing of currently active module
  // truncated at the end

  $system-import: nth(nth($system-data, length($system-data)), 2) !global;

  // content
  @content;

  // truncate (data)
  // removes last item in map
  // thus activating the next to last item

  $system-data: map-remove($system-data, '#{compute-key($name, $group)}') !global;

  // truncate
  // if system data are available, set to last item
  // otherwise truncate the variable

  $system-import: if(length($system-data) > 0, nth(nth($system-data, length($system-data)), 2), ()) !global;

}
