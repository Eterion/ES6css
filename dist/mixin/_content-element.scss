/// Adds standardized bottom margin to an element to create whitespace. The **$reduce** parameter controls which selectors will have reduced whitespace after each other, keyword **this** can be used for element with identical selector to its parent. This mixin already includes unit ([**rem**](#function-rem)) conversion.
/// @group tools
/// @access public
/// @param {string|list} $reduce - List of connected selectors, can use **this** keyword
/// @example @include content-element(this)

@mixin content-element($reduce...) {

  // bottom margin
  // adds standardized bottom margin
  // size can be changed individually through 'whitespace-content-element' export property

  margin-bottom: get(whitespace-content-element);

  // compact
  // for cases where the element is part of layout or bottom margin is undesirable
  // and it's easier to include class instead of custom css

  &.#{$const-class-content-element-compact} {
    margin-bottom: 0;
  }

  // selectors
  $connect: ();

  // create selectors
  @if(length($reduce) > 0) {
    @each $selector in $reduce {
      $connect: append($connect, '& + #{if($selector == this, get(selector), $selector)}', comma);
    }
  }

  // definition
  @if(length($connect) > 0) {
    &:not(#{class($const-class-content-element-compact)}) {
      #{$connect} {
        margin-top: -#{rem(get-value(whitespace-content-element) - get-value(whitespace-content-element-connect))};
      }
    }
  }

}
