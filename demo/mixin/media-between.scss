@import '../../dist/esm';

@each $scale in map-keys($const-media-scale) {
  @if(index(map-keys($const-media-scale), $scale) < length($const-media-scale)) {

    $next: nth(map-keys($const-media-scale), index(map-keys($const-media-scale), $scale) + 1);

    /* #{$scale}, #{$next} */
    element {
      @include media-between($scale, $next) {
        content: '#{$scale}, #{$next}';
      }
    }

    /* #{$scale}, #{$next} (prop: width) */
    element {
      @include media-between($scale, $next, $prop: width) {
        content: '#{$scale}, #{$next}';
      }
    }

    /* #{$scale}, #{$next} (prop: height) */
    element {
      @include media-between($scale, $next, $prop: height) {
        content: '#{$scale}, #{$next}';
      }
    }

    /* #{$scale}, #{$next} (prop: both) */
    element {
      @include media-between($scale, $next, $prop: both) {
        content: '#{$scale}, #{$next}';
      }
    }

    /* #{$scale}, #{$next} (prop: both, operator: and) */
    element {
      @include media-between($scale, $next, $prop: both, $operator: and) {
        content: '#{$scale}, #{$next}';
      }
    }

    /* #{$scale}, #{$next} (prop: both, operator: or) */
    element {
      @include media-between($scale, $next, $prop: both, $operator: or) {
        content: '#{$scale}, #{$next}';
      }
    }

  }
}
